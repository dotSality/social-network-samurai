{"version":3,"file":"static/js/40.a761e900.chunk.js","mappings":"6KAeA,IARqB,SAAC,GAAyC,IAAvCA,EAAsC,EAAtCA,SAAaC,GAAyB,YAC5D,OACE,SAAC,KAAD,kBAAYA,GAAZ,aACGD,O,8ECTP,EAA0B,yBAA1B,EAAkE,8BAAlE,EAA2G,0BCA3G,EAAyB,2BAAzB,EAA6D,2B,mBCIhDE,EAAa,SAACC,GACvB,OACI,gBAAKC,UAAS,UAAKC,EAAL,YAAiBA,GAA/B,UACI,SAAC,KAAD,CAASC,GAAI,YAAcH,EAAMI,GAAjC,SAAsCJ,EAAMK,UCPxD,EAA0B,6BAA1B,EAA8D,0BAA9D,EAA+F,0BCGlFC,EAAU,SAACN,GACpB,OACI,iBAAKC,UAAWD,EAAMO,OAASL,EAAYA,EAA3C,UAAoDF,EAAMQ,SACtD,gBAAKP,UAAWC,EAAhB,uB,2DCNZ,EAA8B,iCCKtBO,EAASC,EAAAA,EAAAA,KACTC,EAAaC,EAAAA,EAAAA,SAMRC,EAAc,WACzB,MAAeH,EAAAA,EAAAA,UAARI,GAAP,eAEMC,GAAWC,EAAAA,EAAAA,KAOjB,OAAO,UAAC,IAAD,CACLC,OAAO,WACPhB,UAAWC,EACXY,KAAMA,EACNI,SATe,SAACC,GAChBJ,GAASK,EAAAA,EAAAA,GAAWD,EAAKX,UACzBM,EAAKO,eAGA,WAML,SAACZ,EAAD,CAAMJ,KAAK,UAAUiB,MAAO,CAAC,CAAEC,UAAU,EAAMf,QAAS,2BAAxD,UACE,SAACG,EAAD,CAAUa,SAAU,CAAEC,QAAS,EAAGC,QAAS,QAE7C,SAACC,EAAA,EAAD,CAAcC,SAAS,SAAvB,8BCFJ,GAtBgBC,E,QAAAA,IAAiB,WAE/B,OAA8BC,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,eAApDC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,SACbC,EAAcF,EAAQG,KAAI,SAAAC,GAAC,OAAI,SAACtC,EAAD,CAAuBM,KAAMgC,EAAEhC,KAAMD,GAAIiC,EAAEjC,IAA1BiC,EAAEjC,OAClDkC,EAAeJ,EAASE,KAAI,SAAAG,GAAC,OAAI,SAACjC,EAAD,CAAoBF,GAAImC,EAAEnC,GAAII,QAAS+B,EAAE/B,QAASD,OAAQgC,EAAEhC,QAA9CgC,EAAEnC,OAErD,OACE,iBAAKH,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,SACGiC,KAEH,iBAAKlC,UAAWC,EAAhB,WACE,yBACGoC,KAEH,SAACzB,EAAD,c,gGCnBD,SAASgB,EAAoBW,GAMhC,OALA,SAA2BxC,GAEvB,OADiB8B,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMU,QAAxCC,QAEA,SAACF,GAAD,UAAexC,KADF,SAAC,KAAD,CAAUG,GAAI","sources":["Components/CommonUI/CommonButton/CommonButton.tsx","webpack://social-network/./src/Components/Dialogs/Dialogs.module.scss?d5e3","webpack://social-network/./src/Components/Dialogs/Dialog/DialogItem.module.css?54cf","Components/Dialogs/Dialog/DialogItem.tsx","webpack://social-network/./src/Components/Dialogs/Message/MessageItem.module.css?7a19","Components/Dialogs/Message/MessageItem.tsx","webpack://social-network/./src/Components/Dialogs/AddMessageForm/MessageForm.module.scss?1f19","Components/Dialogs/AddMessageForm/MessageForm.tsx","Components/Dialogs/Dialogs.tsx","HOC/WithAuthRedirect.tsx"],"sourcesContent":["import { Button, ButtonProps } from 'antd';\r\nimport { ReactNode } from 'react';\r\n\r\ninterface IButton extends ButtonProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst CommonButton = ({ children, ...restProps }: IButton) => {\r\n  return (\r\n    <Button {...restProps}>\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default CommonButton;","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__lcZ6w\",\"dialogsItems\":\"Dialogs_dialogsItems__bmPCe\",\"messages\":\"Dialogs_messages__HPn1P\",\"container\":\"Dialogs_container__60fRX\",\"addMsg\":\"Dialogs_addMsg__8H0XK\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__o2wdN\",\"active\":\"DialogItem_active__7v6Ny\"};","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {DialogType} from '../../../bll/dialogs-reducer';\r\n\r\nexport const DialogItem = (props: DialogType) => {\r\n    return (\r\n        <div className={`${s.dialog} ${s.active}`}>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"MessageItem_message__-opAU\",\"self\":\"MessageItem_self__QNriM\",\"time\":\"MessageItem_time__PL4JZ\"};","import React from 'react';\r\nimport s from './MessageItem.module.css';\r\nimport {MessageType} from '../../../bll/dialogs-reducer';\r\n\r\nexport const Message = (props: MessageType) => {\r\n    return (\r\n        <div className={props.sender ? s.message : s.self}>{props.message}\r\n            <div className={s.time}>20:00</div>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"messageForm\":\"MessageForm_messageForm__vlP1V\"};","import { useAppDispatch } from '../../../bll/hooks';\r\nimport { addMessage } from '../../../bll/dialogs-reducer';\r\nimport { Form, Input } from 'antd';\r\nimport CommonButton from '../../CommonUI/CommonButton/CommonButton';\r\nimport s from './MessageForm.module.scss';\r\n\r\nconst { Item } = Form;\r\nconst { TextArea } = Input;\r\n\r\ntype MessageData = {\r\n  message: string\r\n}\r\n\r\nexport const MessageForm = () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onSubmit = (data: MessageData) => {\r\n    dispatch(addMessage(data.message));\r\n    form.resetFields();\r\n  };\r\n\r\n  return <Form\r\n    layout=\"vertical\"\r\n    className={s.messageForm}\r\n    form={form}\r\n    onFinish={onSubmit}\r\n  >\r\n    <Item name=\"message\" rules={[{ required: true, message: 'Message can\\'t be empty' }]}>\r\n      <TextArea autoSize={{ minRows: 3, maxRows: 6 }}/>\r\n    </Item>\r\n    <CommonButton htmlType=\"submit\">\r\n      Send message\r\n    </CommonButton>\r\n  </Form>;\r\n};","import React from 'react';\r\nimport s from './Dialogs.module.scss';\r\nimport { DialogItem } from './Dialog/DialogItem';\r\nimport { Message } from './Message/MessageItem';\r\nimport { MessageForm } from './AddMessageForm/MessageForm';\r\nimport { useAppSelector } from '../../bll/hooks';\r\nimport { WithAuthRedirect } from '../../HOC/WithAuthRedirect';\r\n\r\nconst Dialogs = WithAuthRedirect(() => {\r\n\r\n  const { dialogs, messages } = useAppSelector(state => state.dialogsPage);\r\n  let dialogItems = dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\r\n  let messageItems = messages.map(m => <Message key={m.id} id={m.id} message={m.message} sender={m.sender}/>);\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n        {dialogItems}\r\n      </div>\r\n      <div className={s.messages}>\r\n        <div>\r\n          {messageItems}\r\n        </div>\r\n        <MessageForm/>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Dialogs;","import {FC} from 'react';\r\nimport {Navigate} from 'react-router-dom';\r\nimport {useAppSelector} from '../bll/hooks';\r\n\r\nexport function WithAuthRedirect<T>(Component: FC<T>) {\r\n    function RedirectComponent(props: T) {\r\n        const {isAuth} = useAppSelector(state => state.auth)\r\n        if (!isAuth) return <Navigate to={'/login'}/>\r\n        return <Component {...props}/>\r\n    }\r\n    return RedirectComponent;\r\n}"],"names":["children","restProps","DialogItem","props","className","s","to","id","name","Message","sender","message","Item","Form","TextArea","Input","MessageForm","form","dispatch","useAppDispatch","layout","onFinish","data","addMessage","resetFields","rules","required","autoSize","minRows","maxRows","CommonButton","htmlType","WithAuthRedirect","useAppSelector","state","dialogsPage","dialogs","messages","dialogItems","map","d","messageItems","m","Component","auth","isAuth"],"sourceRoot":""}