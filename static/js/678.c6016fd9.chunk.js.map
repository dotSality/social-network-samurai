{"version":3,"file":"static/js/678.c6016fd9.chunk.js","mappings":"8KACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAA2G,0BAA3G,EAA8I,wBCA9I,EAAyB,2BAAzB,EAA6D,2B,mBCIhDA,EAAa,SAACC,GACvB,OACI,gBAAKC,UAAS,UAAKC,EAAL,YAAiBA,GAA/B,UACI,SAAC,KAAD,CAASC,GAAI,YAAcH,EAAMI,GAAjC,SAAsCJ,EAAMK,UCPxD,EAA0B,6BAA1B,EAA8D,0BAA9D,EAA+F,0BCGlFC,EAAU,SAACN,GACpB,OAEI,iBAAKC,UAAWD,EAAMO,OAASL,EAAYA,EAA3C,UAAoDF,EAAMQ,SAC1D,gBAAKP,UAAWC,EAAhB,uB,uCCAKO,EAAc,WAEvB,IAAMC,GAAWC,EAAAA,EAAAA,KACjB,GAIIC,EAAAA,EAAAA,IAAqB,CACrBC,cAAe,CACXL,QAAS,MALbM,EADJ,EACIA,SACAC,EAFJ,EAEIA,aACAC,EAHJ,EAGIA,MAYJ,OAAO,kBAAMC,SAAUF,GALN,SAACG,GACdR,GAASS,EAAAA,EAAAA,GAAWD,EAAKV,UACzBQ,OAGG,WACH,6BAAUI,YAAa,yBACfN,EAAS,cACjB,kBAAOO,KAAM,SAAUC,MAAO,qBCAtC,EAtBgB,WAEZ,OAA2BC,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,eAAlDC,EAAP,EAAOA,QAAQC,EAAf,EAAeA,SACXC,EAAcF,EAAQG,KAAI,SAAAC,GAAC,OAAI,SAAC/B,EAAD,CAAuBM,KAAMyB,EAAEzB,KAAMD,GAAI0B,EAAE1B,IAA1B0B,EAAE1B,OAClD2B,EAAeJ,EAASE,KAAI,SAAAG,GAAC,OAAI,SAAC1B,EAAD,CAAoBF,GAAI4B,EAAE5B,GAAII,QAASwB,EAAExB,QAASD,OAAQyB,EAAEzB,QAA9CyB,EAAE5B,OAErD,OACI,iBAAKH,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACK0B,KAEL,iBAAK3B,UAAWC,EAAhB,UACK6B,GACD,gBAAK9B,UAAWC,EAAhB,UACI,SAACO,EAAD","sources":["webpack://social-network/./src/Components/Dialogs/Dialogs.module.css?db5c","webpack://social-network/./src/Components/Dialogs/Dialog/DialogItem.module.css?54cf","Components/Dialogs/Dialog/DialogItem.tsx","webpack://social-network/./src/Components/Dialogs/Message/MessageItem.module.css?7a19","Components/Dialogs/Message/MessageItem.tsx","Components/Dialogs/AddMessageForm/MessageForm.tsx","Components/Dialogs/Dialogs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__zksDN\",\"dialogsItems\":\"Dialogs_dialogsItems__ZuiUE\",\"messages\":\"Dialogs_messages__cbaCe\",\"addMsg\":\"Dialogs_addMsg__HNBa1\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__61NdM\",\"active\":\"DialogItem_active__JUwg1\"};","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {DialogType} from '../../../bll/dialogs-reducer';\r\n\r\nexport const DialogItem = (props: DialogType) => {\r\n    return (\r\n        <div className={`${s.dialog} ${s.active}`}>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"MessageItem_message__GUcY5\",\"self\":\"MessageItem_self__Ct4N3\",\"time\":\"MessageItem_time__7oZXf\"};","import React from 'react';\r\nimport s from './MessageItem.module.css';\r\nimport {MessageType} from '../../../bll/dialogs-reducer';\r\n\r\nexport const Message = (props: MessageType) => {\r\n    return (\r\n\r\n        <div className={props.sender ? s.message : s.self}>{props.message}\r\n        <div className={s.time}>20:00</div>\r\n        </div>\r\n    )\r\n}","import {useForm} from 'react-hook-form';\r\nimport {useAppDispatch} from '../../../bll/hooks';\r\nimport {addMessage} from '../../../bll/dialogs-reducer';\r\n\r\ntype MessageData = {\r\n    message: string\r\n}\r\n\r\nexport const MessageForm = () => {\r\n\r\n    const dispatch = useAppDispatch()\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset\r\n    } = useForm<MessageData>({\r\n        defaultValues: {\r\n            message: ''\r\n        }\r\n    })\r\n\r\n    const onSubmit = (data: MessageData) => {\r\n        dispatch(addMessage(data.message))\r\n        reset()\r\n    }\r\n\r\n    return <form onSubmit={handleSubmit(onSubmit)}>\r\n        <textarea placeholder={'Enter your message...'}\r\n            {...register('message')}/>\r\n        <input type={'submit'} value={'Send message'}/>\r\n    </form>\r\n}","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {DialogItem} from './Dialog/DialogItem';\r\nimport {Message} from './Message/MessageItem';\r\nimport {MessageForm} from './AddMessageForm/MessageForm';\r\nimport {useAppSelector} from '../../bll/hooks';\r\n\r\nconst Dialogs = () => {\r\n\r\n    const {dialogs,messages} = useAppSelector(state => state.dialogsPage)\r\n    let dialogItems = dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>)\r\n    let messageItems = messages.map(m => <Message key={m.id} id={m.id} message={m.message} sender={m.sender}/>)\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogItems}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messageItems}\r\n                <div className={s.addMsg}>\r\n                    <MessageForm/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs"],"names":["DialogItem","props","className","s","to","id","name","Message","sender","message","MessageForm","dispatch","useAppDispatch","useForm","defaultValues","register","handleSubmit","reset","onSubmit","data","addMessage","placeholder","type","value","useAppSelector","state","dialogsPage","dialogs","messages","dialogItems","map","d","messageItems","m"],"sourceRoot":""}