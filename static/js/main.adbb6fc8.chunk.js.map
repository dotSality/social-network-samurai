{"version":3,"sources":["bll/hooks.ts","Components/common/styles/Common.module.css","bll/form-reducer.ts","Components/NavBar/NavBar.module.css","Components/common/Img/Circle-Loading.svg","Components/common/Preloader/Preloader.tsx","utils/validators/validators.ts","Components/Header/Header.module.css","Components/Friends/Friends.module.css","Components/Friends/Friend/Friend.module.css","api/profileAPI.ts","bll/profile-reducer.ts","api/usersAPI.ts","bll/users-reducer.ts","bll/dialogs-reducer.ts","Components/common/Preloader/Preloader.module.scss","api/instance.ts","Components/News/News.tsx","Components/Music/Music.tsx","Components/Settings/Settings.tsx","Components/LoginPage/LoginForm.tsx","api/authAPI.ts","bll/auth-reducer.ts","Components/LoginPage/LoginPage.tsx","bll/app-reducer.tsx","HOC/LazyWithSuspense.tsx","Components/Header/Header.tsx","Components/Friends/Friend/Friend.tsx","Components/Friends/Friends.tsx","Components/NavBar/NavBar.tsx","App.tsx","reportWebVitals.ts","bll/sidebar-reducer.ts","bll/store.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","module","exports","slice","createSlice","name","initialState","error","editMode","reducers","setFormError","state","action","payload","setEditMode","formReducer","reducer","actions","Preloader","className","s","container","style","width","src","loading","alt","postFieldValidator","required","maxLength","value","message","emailFieldValidator","pattern","passwordFieldValidator","captchaFieldValidator","profileAPI","userId","instance","get","then","res","data","status","put","file","formData","FormData","append","headers","profile","posts","id","post","likesCount","addPost","newPost","Date","getTime","unshift","setUserProfile","setStatus","deletePost","postIndex","findIndex","p","splice","uploadPhotoSuccess","photos","profileReducer","loadUserProfile","createAsyncThunk","a","dispatch","getProfileRes","getUserStatus","getStatusRes","updateUserStatus","resultCode","uploadPhoto","submitProfile","getState","auth","profileRes","messages","usersAPI","currentPage","pageSize","userID","delete","users","totalUsersCount","isFetching","isFollowing","followToggle","user","find","u","followed","setUsers","setCurrentPage","setTotalCount","toggleFetching","toggleIsFollowingProgress","filter","usersReducer","requestUsers","getUsersRes","items","totalCount","toggleFollow","isFollowed","dialogs","sender","addMessage","newMessage","push","dialogsReducer","axios","create","baseURL","withCredentials","News","Music","Settings","LoginForm","props","useForm","defaultValues","email","password","rememberMe","captcha","register","handleSubmit","errors","formState","reset","onSubmit","onSubmitData","textArea","placeholder","textBlock","type","captchaUrl","authAPI","login","remember","isAuth","setAuthUserData","stopSubmit","setCaptcha","authReducer","loginRequest","_","userLoginRes","captchaRes","url","length","logout","LoginPage","to","initialized","initSuccess","appReducer","initializeApp","promise","Promise","all","LazyWithSuspense","Component","fallback","Header","header","loginBlock","onClick","Friend","friend","avatar","Friends","friendItems","friends","map","f","friendsCont","NavBar","sidebar","linkClassName","isActive","item","activeLink","nav","mainNav","Dialogs","lazy","Profile","Users","App","app","useEffect","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","sidebarReducer","reducersBunch","combineReducers","profilePage","dialogsPage","usersPage","form","store","configureStore","window","rerenderEntireTree","ReactDOM","render","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.adbb6fc8.chunk.js","sourcesContent":["import {TypedUseSelectorHook, useDispatch, useSelector} from 'react-redux';\r\nimport {AppDispatchType, RootStateType} from './store';\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatchType>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootStateType> = useSelector","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textBlock\":\"Common_textBlock__IWGm7\",\"textArea\":\"Common_textArea__1ljcg\",\"error\":\"Common_error__18zfi\"};","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\r\nimport {Nullable} from './profile-reducer';\r\n\r\nconst slice = createSlice({\r\n    name: 'form',\r\n    initialState: {\r\n        error: null as string | null,\r\n        editMode: false\r\n    },\r\n    reducers: {\r\n        setFormError(state, action: PayloadAction<Nullable<string>>) {\r\n            state.error = action.payload\r\n        },\r\n        setEditMode(state, action: PayloadAction<boolean>) {\r\n            state.editMode = action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const formReducer = slice.reducer\r\nexport const {setEditMode, setFormError} = slice.actions\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__2Q_l4\",\"mainNav\":\"NavBar_mainNav__2iHLZ\",\"item\":\"NavBar_item__u5y3L\",\"activeLink\":\"NavBar_activeLink__3WEpb\"};","export default __webpack_public_path__ + \"static/media/Circle-Loading.385f97b7.svg\";","import loading from '../Img/Circle-Loading.svg';\r\nimport React from 'react';\r\nimport s from './Preloader.module.scss';\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div className={s.container}>\r\n            <img style={{width: '350px'}} src={loading} alt={'preloader'}/>\r\n        </div>\r\n    )\r\n}","export const postFieldValidator = {\r\n    required: 'You can\\'t post an empty post',\r\n    maxLength: {\r\n        value: 10,\r\n        message: 'Max length is 300 characters',\r\n    },\r\n}\r\n\r\nexport const emailFieldValidator = {\r\n    required: 'Please, enter e-mail',\r\n    pattern: {\r\n        value: /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/,\r\n        message: 'Incorrect e-mail'\r\n    }\r\n}\r\n\r\nexport const passwordFieldValidator = {\r\n    required: 'Please, enter password',\r\n}\r\n\r\nexport const captchaFieldValidator = {\r\n    required: 'Wrong captcha'\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__17wxo\",\"loginBlock\":\"Header_loginBlock__3fOBz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Friends_header__3qTWQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__2R-La\",\"name\":\"Friend_name__2C8Yt\"};","import {ProfileType} from '../Components/Profile/Profile';\r\nimport {ProfileDataType} from '../Components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm';\r\nimport {instance} from './instance';\r\nimport {CommonResponseType} from './usersAPI';\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId: number) {\r\n        return instance.get<ProfileType>(`profile/` + userId).then(res => res.data)\r\n    },\r\n    getUserStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/${userId}`).then(res => res.data)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<CommonResponseType>(`profile/status`, {status})\r\n    },\r\n    uploadPhoto(file: File) {\r\n        let formData = new FormData()\r\n        formData.append('image', file)\r\n        return instance.put<CommonResponseType<PhotosType>>(`profile/photo`, formData, {\r\n            headers: {'Content-Type': 'multipart/form-data'}\r\n        }).then(res => res.data)\r\n    },\r\n    submitProfile(profile: ProfileDataType) {\r\n        return instance.put<CommonResponseType>(`profile`, profile).then(res => res.data)\r\n    }\r\n}\r\n\r\ntype PhotosType = {\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\n","import {ProfileType} from '../Components/Profile/Profile';\r\nimport {profileAPI} from '../api/profileAPI';\r\nimport {ProfileDataType} from '../Components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm';\r\nimport {RootStateType} from './store';\r\nimport {setEditMode, setFormError} from './form-reducer';\r\nimport {createAsyncThunk, createSlice, PayloadAction} from '@reduxjs/toolkit';\r\n\r\nexport type PostType = {\r\n    id: number\r\n    post: string\r\n    likesCount: number\r\n}\r\n\r\nconst slice = createSlice({\r\n    name: 'profile',\r\n    initialState: {\r\n        posts: [\r\n            {id: 1, post: 'Hi', likesCount: 15},\r\n            {id: 2, post: 'Yo!', likesCount: 12},\r\n            {id: 3, post: 'Wazzup?', likesCount: 23},\r\n        ] as PostType[],\r\n        profile: null as Nullable<ProfileType>,\r\n        status: '',\r\n    },\r\n    reducers: {\r\n        addPost(state, action: PayloadAction<string>) {\r\n            const newPost: PostType = {\r\n                id: new Date().getTime(),\r\n                post: action.payload,\r\n                likesCount: 0\r\n            };\r\n            state.posts.unshift(newPost)\r\n        },\r\n        setUserProfile(state, action: PayloadAction<Nullable<ProfileType>>) {\r\n            state.profile = action.payload\r\n        },\r\n        setStatus(state, action: PayloadAction<string>) {\r\n            state.status = action.payload\r\n        },\r\n        deletePost(state, action: PayloadAction<number>) {\r\n            const postIndex = state.posts.findIndex(p => action.payload === p.id)\r\n            state.posts.splice(postIndex, 1)\r\n        },\r\n        uploadPhotoSuccess(state, action: PayloadAction<any>) {\r\n            state.profile!.photos = action.payload\r\n        }\r\n    },\r\n})\r\n\r\nexport type Nullable<T> = T | null\r\n\r\nexport const profileReducer = slice.reducer\r\nexport const {deletePost, addPost, uploadPhotoSuccess, setStatus, setUserProfile} = slice.actions\r\n\r\nexport const loadUserProfile = createAsyncThunk('profile/loadUserProfile', async (userId: number, {dispatch}) => {\r\n    let getProfileRes = await profileAPI.getUserProfile(userId)\r\n    dispatch(setUserProfile(getProfileRes))\r\n})\r\n\r\nexport const getUserStatus = createAsyncThunk('profile/getUserStatus', async(userId: number, {dispatch}) => {\r\n    let getStatusRes = await profileAPI.getUserStatus(userId)\r\n    dispatch(setStatus(getStatusRes))\r\n})\r\n\r\nexport const updateUserStatus = createAsyncThunk('profile/updateUserStatus', async (status: string, {dispatch}) => {\r\n    let updateStatusRes = await profileAPI.updateStatus(status)\r\n    if (updateStatusRes.data.resultCode === 0) dispatch(setStatus(status))\r\n})\r\n\r\nexport const uploadPhoto = createAsyncThunk('profile/uploadPhoto', async (file: File, {dispatch})=> {\r\n    let res = await profileAPI.uploadPhoto(file)\r\n    if (res.resultCode === 0) dispatch(uploadPhotoSuccess(res.data.photos))\r\n})\r\n\r\nexport const submitProfile = createAsyncThunk<void, ProfileDataType, {state: RootStateType}>('profile/submitProfile',\r\n    async (profile: ProfileDataType, {dispatch, getState}) => {\r\n    let res = await profileAPI.submitProfile(profile)\r\n    if (res.resultCode === 0) {\r\n        const userId: number = getState().auth.id!\r\n        let profileRes = await profileAPI.getUserProfile(userId)\r\n        dispatch(setUserProfile(profileRes))\r\n        dispatch(setEditMode(false))\r\n        dispatch(setFormError(null))\r\n    } else {\r\n        dispatch(setFormError(res.messages[0]))\r\n    }\r\n})\r\n","import {AxiosResponse} from 'axios';\r\nimport {UserType} from '../bll/users-reducer';\r\nimport {instance} from './instance';\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get<string, AxiosResponse<GetDataType>>\r\n        (`users?page=${currentPage}&count=${pageSize}`).then(res => res.data)\r\n    },\r\n    getUserData(userID: number) {\r\n        return instance.get<AxiosResponse<CommonResponseType<UserType>>>(`follow/${userID}`).then(res => res.data)\r\n    },\r\n    unfollowUserRequest(userID: number) {\r\n        return instance.delete<CommonResponseType>(`follow/${userID}`)\r\n    },\r\n    followUserRequest(userID: number) {\r\n        return instance.post<CommonResponseType>(`follow/${userID}`, {})\r\n    },\r\n}\r\n\r\ntype GetDataType = {\r\n    error: number,\r\n    items: UserType[],\r\n    totalCount: number\r\n}\r\n\r\nexport type CommonResponseType<T = {}> = {\r\n    data: T,\r\n    messages: string[],\r\n    fieldsErrors: string[],\r\n    resultCode: number,\r\n}\r\n","import {usersAPI} from '../api/usersAPI';\r\nimport {createAsyncThunk, createSlice, PayloadAction} from '@reduxjs/toolkit';\r\n\r\ntype PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\n\r\nexport type UserType = {\r\n    name: string,\r\n    id: number,\r\n    uniqueUrlName: string | null,\r\n    photos: PhotosType,\r\n    status: string | null,\r\n    followed: boolean,\r\n}\r\n\r\nconst slice = createSlice({\r\n    name: 'users',\r\n    initialState: {\r\n        users: [] as UserType[],\r\n        pageSize: 5,\r\n        totalUsersCount: 0,\r\n        currentPage: 1,\r\n        isFetching: true,\r\n        isFollowing: [] as number[]\r\n    },\r\n    reducers: {\r\n        followToggle(state, action: PayloadAction<number>) {\r\n            const user = state.users.find(u => u.id === action.payload)\r\n            if (user) user.followed = !user.followed\r\n        },\r\n        setUsers(state, action: PayloadAction<UserType[]>) {\r\n            state.users = action.payload\r\n        },\r\n        setCurrentPage(state, action: PayloadAction<number>) {\r\n            state.currentPage = action.payload\r\n        },\r\n        setTotalCount(state, action: PayloadAction<number>) {\r\n            state.totalUsersCount = action.payload\r\n        },\r\n        toggleFetching(state, action: PayloadAction<boolean>) {\r\n            state.isFetching = action.payload\r\n        },\r\n        toggleIsFollowingProgress(state, action: PayloadAction<{ isFetching: boolean, userID: number }>) {\r\n            state.isFollowing = action.payload.isFetching\r\n                ? [...state.isFollowing, action.payload.userID]\r\n                : state.isFollowing.filter(id => id !== action.payload.userID)\r\n        }\r\n    },\r\n})\r\n\r\nexport const usersReducer = slice.reducer\r\nexport const {setCurrentPage, setTotalCount, setUsers, toggleFetching, followToggle, toggleIsFollowingProgress} = slice.actions\r\n\r\nexport const requestUsers = createAsyncThunk('users/requestUsers',\r\n    async ({currentPage, pageSize}: { currentPage: number, pageSize: number }, {dispatch}) => {\r\n        let getUsersRes = await usersAPI.getUsers(currentPage, pageSize)\r\n        dispatch(toggleFetching(false));\r\n        dispatch(setUsers(getUsersRes.items));\r\n        dispatch(setTotalCount(getUsersRes.totalCount));\r\n    })\r\n\r\nexport const toggleFollow = createAsyncThunk('users/toggleFollow',\r\n    async ({userID, isFollowed}: { userID: number, isFollowed: boolean }, {dispatch}) => {\r\n        dispatch(toggleIsFollowingProgress({isFetching: true, userID}))\r\n        await usersAPI.getUserData(userID)\r\n        if (isFollowed) {\r\n            let unfollowRes = await usersAPI.unfollowUserRequest(userID)\r\n            if (unfollowRes.data.resultCode === 0) dispatch(followToggle(userID))\r\n        } else {\r\n            let followRes = await usersAPI.followUserRequest(userID)\r\n            if (followRes.data.resultCode === 0) dispatch(followToggle(userID))\r\n        }\r\n        dispatch(toggleIsFollowingProgress({isFetching: false, userID}))\r\n    })\r\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\r\n\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n    sender: boolean\r\n}\r\n\r\nexport type DialogType = {\r\n    name: string\r\n    id: number\r\n}\r\n\r\nconst slice = createSlice({\r\n    name: 'dialogs',\r\n    initialState: {\r\n        dialogs: [\r\n            {id: 1, name: 'Dimych'},\r\n            {id: 2, name: 'Andrew'},\r\n            {id: 3, name: 'Sasha'},\r\n            {id: 4, name: 'Victor'},\r\n            {id: 5, name: 'Valery'},\r\n        ] as DialogType[],\r\n        messages: [\r\n            {id: 1, message: 'Hi', sender: true},\r\n            {id: 2, message: 'Yo!', sender: false},\r\n            {id: 3, message: 'What\\'s up? I saw you yesterday at the park at 9 o\\'clock!', sender: true},\r\n            {id: 4, message: 'Okay... Why do you stalkering me?!', sender: false},\r\n            {id: 5, message: 'I LOVE YOU BABE! I WANNA BE WITH YOU!!!', sender: true},\r\n        ] as MessageType[]\r\n    },\r\n    reducers:{\r\n        addMessage(state, action: PayloadAction<string>) {\r\n            const newMessage: MessageType = {\r\n                id: new Date().getTime(),\r\n                message: action.payload,\r\n                sender: false\r\n            };\r\n            state.messages.push(newMessage)\r\n        }\r\n    }\r\n})\r\n\r\nexport const dialogsReducer = slice.reducer\r\nexport const {addMessage} = slice.actions\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Preloader_container__3rzUo\"};","import axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'ecad3ae6-8083-4154-b722-6cea4b99f288'\r\n    }\r\n})\r\n","import React from 'react';\r\n\r\nconst News = () => {\r\n    return(\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import {useForm, SubmitHandler} from 'react-hook-form';\r\nimport s from '../common/styles/Common.module.css'\r\nimport {captchaFieldValidator, emailFieldValidator, passwordFieldValidator} from '../../utils/validators/validators';\r\n\r\nexport type FormInputsType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n    captcha: string\r\n}\r\n\r\ntype SubmitDataPropsType = {\r\n    onSubmitData: (data: FormInputsType) => void\r\n    error: string\r\n    captchaUrl: string\r\n}\r\n\r\nexport const LoginForm = (props: SubmitDataPropsType) => {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: {errors},\r\n        reset\r\n    } = useForm<FormInputsType>({\r\n        defaultValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false,\r\n            captcha: '',\r\n        }\r\n    })\r\n\r\n    const onSubmit: SubmitHandler<FormInputsType> = (data: FormInputsType) => {\r\n        props.onSubmitData(data)\r\n        reset()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div>\r\n                    <input className={s.textArea} placeholder={'Email...'}\r\n                        {...register('email', emailFieldValidator)}/>\r\n                </div>\r\n                <div className={s.textBlock}>{errors.email?.message}</div>\r\n                <div>\r\n                    <input type={'password'} placeholder={'Password...'}\r\n                        className={s.textArea} {...register('password', passwordFieldValidator)}/>\r\n                </div>\r\n                {\r\n                    props.captchaUrl ?\r\n                        <div>\r\n                            <img src={props.captchaUrl} alt={'captcha'}/>\r\n                            <div>\r\n                                <input className={s.textArea} {...register('captcha', captchaFieldValidator)} />\r\n                            </div>\r\n                            <span className={s.textBlock}>{props.error ? props.error : errors.captcha && errors.captcha?.message}</span>\r\n                        </div>\r\n                        : props.error ? <div className={s.textBlock}>{props.error}</div>\r\n                            : <div className={s.textBlock}>{errors.password?.message}</div>\r\n                }\r\n                <div>\r\n                    <input type={'checkbox'}\r\n                        {...register('rememberMe')}/> Remember me\r\n                </div>\r\n                <div>\r\n                    <input value={'Login'} type={'submit'}/>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import {SubmitDataType} from '../bll/auth-reducer';\r\nimport {AxiosResponse} from 'axios';\r\nimport {CommonResponseType} from './usersAPI';\r\nimport {instance} from './instance';\r\n\r\nexport const authAPI = {\r\n    isAuthRequest() {\r\n        return instance.get<CommonResponseType<IsAuthResponseType>>(`auth/me`).then(res => res.data)\r\n    },\r\n    userLogin(data: SubmitDataType) {\r\n        return instance.post<SubmitDataType, AxiosResponse<CommonResponseType>>(`auth/login`, data).then(res => res.data)\r\n    },\r\n    userLogout() {\r\n        return instance.delete<CommonResponseType>(`auth/login`)\r\n    },\r\n    captchaRequest() {\r\n        return instance.get<CommonResponseType<{ url: string }>>('security/get-captcha-url')\r\n    }\r\n}\r\n\r\ntype IsAuthResponseType = {\r\n    email: string,\r\n    id: number,\r\n    login: string,\r\n}","import {authAPI} from '../api/authAPI';\r\nimport {Nullable} from './profile-reducer';\r\nimport {createAsyncThunk, createSlice, PayloadAction} from '@reduxjs/toolkit';\r\n\r\nexport type SubmitDataType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n}\r\n\r\ntype UserDataActionType = {\r\n    id: Nullable<number>,\r\n    email: Nullable<string>,\r\n    login: Nullable<string>,\r\n    isAuth: boolean,\r\n}\r\n\r\nconst slice = createSlice({\r\n    name: 'auth',\r\n    initialState: {\r\n        id: null as number | null,\r\n        email: null as string | null,\r\n        login: null as string | null,\r\n        remember: false,\r\n        isAuth: false,\r\n        error: '',\r\n        captchaUrl: '',\r\n    },\r\n    reducers: {\r\n        setAuthUserData(state, action: PayloadAction<UserDataActionType>) {\r\n            return {...state, ...action.payload, error: ''}\r\n        },\r\n        stopSubmit(state, action: PayloadAction<string>) {\r\n            state.error = action.payload\r\n        },\r\n        setCaptcha(state, action: PayloadAction<string>) {\r\n            state.captchaUrl = action.payload\r\n        },\r\n    }\r\n})\r\n\r\nexport const authReducer = slice.reducer\r\nexport const {setAuthUserData, setCaptcha, stopSubmit} = slice.actions\r\n\r\nexport const loginRequest = createAsyncThunk('auth/loginRequest', async (_, {dispatch}) => {\r\n    let res = await authAPI.isAuthRequest()\r\n    if (res.resultCode === 0) {\r\n        let {id, email, login} = res.data\r\n        dispatch(setAuthUserData({id, email, login, isAuth: true}))\r\n    }\r\n})\r\n\r\nexport const login = createAsyncThunk('auth/login', async (data: SubmitDataType, {dispatch}) => {\r\n    let userLoginRes = await authAPI.userLogin(data)\r\n    if (userLoginRes.resultCode === 0) {\r\n        dispatch(loginRequest())\r\n        dispatch(setCaptcha(''))\r\n    } else if (userLoginRes.resultCode === 10) {\r\n        dispatch(stopSubmit(userLoginRes.messages[0]))\r\n        let captchaRes = await authAPI.captchaRequest()\r\n        dispatch(setCaptcha(captchaRes.data.data.url))\r\n    } else {\r\n        if (userLoginRes.messages.length > 0) dispatch(stopSubmit(userLoginRes.messages[0]))\r\n    }\r\n})\r\n\r\nexport const logout = createAsyncThunk('auth/logout', async (_, {dispatch}) => {\r\n    let logoutRes = await authAPI.userLogout()\r\n    if (logoutRes.data.resultCode === 0) dispatch(setAuthUserData({id: null, email: null, login: null, isAuth: false}))\r\n})\r\n","import React from 'react';\r\nimport {FormInputsType, LoginForm} from './LoginForm';\r\nimport {login} from '../../bll/auth-reducer';\r\nimport {Navigate} from 'react-router-dom';\r\nimport {useAppDispatch, useAppSelector} from '../../bll/hooks';\r\n\r\nexport const LoginPage = () => {\r\n\r\n    const dispatch = useAppDispatch()\r\n    const {isAuth, error, captchaUrl} = useAppSelector(state => state.auth)\r\n    const onSubmitData = (data: FormInputsType) => {\r\n        dispatch(login(data))\r\n    }\r\n\r\n    return isAuth ? (\r\n        <Navigate to={'/profile'}/>\r\n    ) : <div>\r\n        <h1>Login page</h1>\r\n        <LoginForm captchaUrl={captchaUrl} error={error} onSubmitData={onSubmitData}/>\r\n    </div>\r\n}\r\n","import {loginRequest} from './auth-reducer';\r\nimport {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport {Nullable} from './profile-reducer';\r\n\r\nexport type RequestStatusType = 'loading' | 'idle' | 'failed' | 'succeeded'\r\n\r\nconst slice = createSlice({\r\n    name: 'app',\r\n    initialState: {\r\n        initialized: false,\r\n        status: 'idle' as RequestStatusType,\r\n        error: null as Nullable<string>,\r\n    },\r\n    reducers: {\r\n        initSuccess(state) {\r\n            state.initialized = true\r\n        },\r\n    }\r\n})\r\n\r\nexport const appReducer = slice.reducer\r\nexport const {initSuccess} = slice.actions\r\n\r\nexport const initializeApp = createAsyncThunk('app/initializeApp', async (_, {dispatch}) => {\r\n    let promise = dispatch(loginRequest())\r\n    await Promise.all([promise])\r\n    dispatch(initSuccess())\r\n})\r\n","import {ComponentType, Suspense} from 'react';\r\nimport {Preloader} from '../Components/common/Preloader/Preloader';\r\n\r\nexport function LazyWithSuspense<T = any>(Component: ComponentType) {\r\n    return (props: T) => <Suspense fallback={<Preloader/>}>\r\n        <Component {...props}/>\r\n    </Suspense>\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\nimport {useAppDispatch, useAppSelector} from '../../bll/hooks';\r\nimport {logout} from '../../bll/auth-reducer';\r\n\r\nexport const Header = () => {\r\n\r\n    const dispatch = useAppDispatch()\r\n    const {isAuth,login} = useAppSelector(state => state.auth)\r\n\r\n    const logoutHandler = () => dispatch(logout())\r\n\r\n    return <header className={s.header}>\r\n        <img src='https://i.ibb.co/kDDBfBd/pngtree-abstract-wave-business-logo-png-image-736975.jpg' alt={'header img'}/>\r\n        <div className={s.loginBlock}>\r\n            {isAuth ? <div>{login} - <button onClick={logoutHandler}>Logout</button></div> :\r\n            <NavLink to={'/login/'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n}\r\n","import React from 'react';\r\nimport s from './Friend.module.css'\r\nimport {FriendsItemType} from '../../../bll/sidebar-reducer';\r\n\r\nexport function Friend (props: FriendsItemType) {\r\n    return(\r\n        <div className={s.friend}>\r\n            <img\r\n                src={props.avatar}\r\n                alt={'avatar'}\r\n            />{'\\n'}\r\n            <span className={s.name}>{props.name}</span>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Friends.module.css'\r\nimport {FriendsItemType} from '../../bll/sidebar-reducer';\r\nimport {Friend} from './Friend/Friend';\r\n\r\ntype FriendsPropsType = {\r\n    friends: FriendsItemType[]\r\n}\r\n\r\nexport function Friends (props: FriendsPropsType) {\r\n    let friendItems = props.friends.map(f => <Friend key={f.id} id={f.id} avatar={f.avatar} name={f.name}/>)\r\n    return(\r\n        <div className={s.friendsCont}>\r\n            <span className={s.header}>Friends</span>\r\n            {friendItems}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './NavBar.module.css'\r\nimport {Friends} from '../Friends/Friends';\r\nimport {useAppSelector} from '../../bll/hooks';\r\n\r\nexport const NavBar = () => {\r\n\r\n    const {id} = useAppSelector(state => state.auth)\r\n    const {friends} = useAppSelector(state => state.sidebar)\r\n    const linkClassName = ({isActive}: { isActive: boolean }) => `${s.item} ${isActive ? s.activeLink : ''}`\r\n\r\n    return (<nav className={s.nav}>\r\n        <div className={s.mainNav}>\r\n            <NavLink to={`/profile/${id}`} className={linkClassName}>Profile</NavLink>\r\n            <NavLink to={'/dialogs'} className={linkClassName}>Messages</NavLink>\r\n            <NavLink to={'/news'} className={linkClassName}>News</NavLink>\r\n            <NavLink to={'/users'} className={linkClassName}>Users</NavLink>\r\n            <NavLink to={'/music'} className={linkClassName}>Music</NavLink>\r\n            <NavLink to={'/settings'} className={linkClassName}>Settings</NavLink>\r\n        </div>\r\n        <div>\r\n            <Friends friends={friends}/>\r\n        </div>\r\n    </nav>)\r\n}\r\n","import {lazy, useEffect} from 'react';\r\nimport './App.css';\r\nimport News from './Components/News/News';\r\nimport Music from './Components/Music/Music';\r\nimport Settings from './Components/Settings/Settings';\r\nimport {Route, Routes} from 'react-router-dom';\r\nimport {LoginPage} from './Components/LoginPage/LoginPage';\r\nimport {initializeApp} from './bll/app-reducer';\r\nimport {Preloader} from './Components/common/Preloader/Preloader';\r\nimport {LazyWithSuspense} from './HOC/LazyWithSuspense';\r\nimport {useAppDispatch, useAppSelector} from './bll/hooks';\r\nimport {Header} from './Components/Header/Header';\r\nimport {NavBar} from './Components/NavBar/NavBar';\r\n\r\nconst Dialogs = LazyWithSuspense(lazy(() => import('./Components/Dialogs/Dialogs')))\r\nconst Profile = LazyWithSuspense(lazy(() => import('./Components/Profile/Profile')))\r\nconst Users = LazyWithSuspense(lazy(() => import('./Components/Users/Users')))\r\n\r\nexport const App = () => {\r\n\r\n    const initialized = useAppSelector(state => state.app.initialized)\r\n    const dispatch = useAppDispatch()\r\n    useEffect(() => {\r\n        dispatch(initializeApp())\r\n    }, [])\r\n\r\n    if (!initialized) return <Preloader/>\r\n    return <div className={'app-wrapper'}>\r\n        <Header/>\r\n        <NavBar/>\r\n        <div className={'app-wrapper-content'}>\r\n            <Routes>\r\n                <Route path={'/login/'} element={<LoginPage/>}/>\r\n                <Route path={'/dialogs/'} element={<Dialogs/>}/>\r\n                <Route path={'/profile/:userId'} element={<Profile/>}/>\r\n                <Route path={'/users/'} element={<Users/>}/>\r\n                <Route path={'/news/'} element={<News/>}/>\r\n                <Route path={'/music/'} element={<Music/>}/>\r\n                <Route path={'/settings/'} element={<Settings/>}/>\r\n            </Routes>\r\n        </div>\r\n    </div>\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {createSlice} from '@reduxjs/toolkit';\r\n\r\nexport type FriendsItemType = {\r\n    id: number\r\n    avatar: string\r\n    name: string\r\n}\r\n\r\nconst slice = createSlice({\r\n    name: 'sidebar',\r\n    initialState: {\r\n        friends: [\r\n            {\r\n                id: 1,\r\n                avatar: 'https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_960_720.png',\r\n                name: 'Alexey'\r\n            },\r\n            {\r\n                id: 2,\r\n                avatar: 'https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_960_720.png',\r\n                name: 'Dmitry'\r\n            },\r\n            {\r\n                id: 3,\r\n                avatar: 'https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_960_720.png',\r\n                name: 'Sveta'\r\n            }\r\n        ]\r\n    },\r\n    reducers: {},\r\n})\r\n\r\nexport const sidebarReducer = slice.reducer","import {combineReducers} from 'redux';\r\nimport {profileReducer} from './profile-reducer';\r\nimport {dialogsReducer} from './dialogs-reducer';\r\nimport {sidebarReducer} from './sidebar-reducer';\r\nimport {usersReducer} from './users-reducer';\r\nimport {authReducer} from './auth-reducer';\r\nimport {appReducer} from './app-reducer';\r\nimport {formReducer} from './form-reducer';\r\nimport {configureStore} from '@reduxjs/toolkit';\r\n\r\n\r\nconst reducersBunch = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer,\r\n});\r\n\r\nexport const store = configureStore({\r\n    reducer: reducersBunch,\r\n});\r\n\r\nexport type AppDispatchType = typeof store.dispatch\r\nexport type RootStateType = ReturnType<typeof reducersBunch>\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React from 'react';\r\nimport './index.css';\r\nimport ReactDOM from 'react-dom';\r\nimport {App} from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {store} from './bll/store';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\n\r\nexport const rerenderEntireTree = () => {\r\n    ReactDOM.render(\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\nrerenderEntireTree()\r\n\r\nstore.subscribe(rerenderEntireTree)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}