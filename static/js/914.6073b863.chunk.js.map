{"version":3,"file":"static/js/914.6073b863.chunk.js","mappings":"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","sources":["Components/Profile/Profile.module.css","webpack://social-network/./src/Components/Profile/ProfileInfo/ProfileInfo.module.css?23b5","Components/Profile/ProfileInfo/ProfileStatus.tsx","webpack://social-network/./src/Components/Profile/ProfileInfo/Contacts/Contacts.module.css?d793","Components/Profile/ProfileInfo/Contacts/Contacts.tsx","webpack://social-network/./src/Components/Profile/ProfileInfo/ProfileData/ProfileData.module.css?1c95","Components/Profile/ProfileInfo/ProfileData/ProfileData.tsx","utils/profileFormValidators/profile-valid.ts","webpack://social-network/./src/Components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.module.css?4d9f","Components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://social-network/./src/Components/Profile/MyPosts/MyPosts.module.css?bd90","webpack://social-network/./src/Components/Profile/MyPosts/Post/Post.module.css?54ab","Components/Profile/MyPosts/Post/Post.tsx","Components/Profile/MyPosts/AddPostForm/AddPostForm.tsx","Components/Profile/MyPosts/MyPosts.tsx","Components/Profile/Profile.tsx","HOC/WithAuthRedirect.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"mainCont\":\"Profile_mainCont__dDP6Q\"};","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__xXxHy\",\"status\":\"ProfileInfo_status__3d3ZF\",\"active\":\"ProfileInfo_active__kwZcK\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {useAppDispatch, useAppSelector} from '../../../bll/hooks';\r\nimport {updateUserStatus} from '../../../bll/profile-reducer';\r\n\r\nexport const ProfileStatus = () => {\r\n\r\n    const profileStatus = useAppSelector(state => state.profilePage.status)\r\n    const dispatch = useAppDispatch()\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [status, setStatus] = useState<string>(profileStatus)\r\n\r\n    useEffect(() => {\r\n        setStatus(profileStatus)\r\n    }, [profileStatus])\r\n\r\n    const onEditMode = () => setEditMode(true)\r\n\r\n    const offEditMode = () => {\r\n        setEditMode(false)\r\n        dispatch(updateUserStatus(status))\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return <div>\r\n        {!editMode ?\r\n            (<div>\r\n                <span onClick={onEditMode}>{status || 'no status'}</span>\r\n            </div>) : (\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus onBlur={offEditMode} value={status}/>\r\n                </div>)}\r\n    </div>\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Contacts_main__h-DRH\",\"container\":\"Contacts_container__El1GP\",\"link\":\"Contacts_link__RDnlY\"};","import {ContactsType} from '../../Profile';\r\nimport React from 'react';\r\nimport s from './Contacts.module.css';\r\n\r\nexport const Contacts = (props: ContactsType) => {\r\n\r\n    let keys = Object.keys(props)\r\n    let values = Object.values(props)\r\n    let isRendering = values.some(value => value !== null)\r\n\r\n    let contacts = keys.map((key, i) => {\r\n        return <div key={key}>\r\n            {values[i] && <div className={s.link}><b>{key}</b>:\r\n                {<a target={'_blank'} rel={'noreferrer'} href={values[i]!}> {values[i]}</a>}</div>}\r\n        </div>\r\n    })\r\n\r\n    return (\r\n        <div className={s.main}>\r\n        {isRendering && <div className={s.container}>\r\n            <b>Contacts: </b>{contacts}\r\n        </div>}\r\n    </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ProfileData_container__Fbo6U\",\"item\":\"ProfileData_item__HHp0U\"};","import React from 'react';\r\nimport {Contacts} from '../Contacts/Contacts';\r\nimport s from './ProfileData.module.css'\r\nimport {useAppSelector} from '../../../../bll/hooks';\r\n\r\ntype ProfileDataPropsType = {\r\n    isOwner: boolean\r\n    onEditMode: () => void\r\n}\r\n\r\nexport const ProfileData = ({isOwner, onEditMode}: ProfileDataPropsType) => {\r\n\r\n    const profile = useAppSelector(state => state.profilePage.profile!)\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.item}>\r\n                <b>Looking for a job:</b> {profile.lookingForAJob ? 'yes' : 'no'}\r\n            </div>\r\n            {profile.lookingForAJob && <div className={s.item}>\r\n                <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n            </div>}\r\n            <div className={s.item}>\r\n                <b>Full name: </b>{profile.fullName}\r\n            </div>\r\n            {profile.aboutMe && <div className={s.item}>\r\n                <b>About me: </b>{profile.aboutMe}\r\n            </div>}\r\n            <Contacts {...profile.contacts}/>\r\n            {isOwner && <div className={s.item}>\r\n                <button onClick={onEditMode}>Edit profile</button>\r\n            </div>}\r\n        </div>)\r\n}","export const fullNameValidator = {\r\n    required: 'Enter your name.'\r\n}\r\n\r\nexport const descriptionValidator = {\r\n    required: 'Enter description'\r\n}\r\n\r\nexport const aboutMeValidator = {\r\n    required: 'Enter something about yourself'\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ProfileDataForm_form__BYyZI\",\"blocksContainer\":\"ProfileDataForm_blocksContainer__CmvTm\",\"textarea\":\"ProfileDataForm_textarea__Vbly6\",\"item\":\"ProfileDataForm_item__K9JnV\",\"submit\":\"ProfileDataForm_submit__nAvdM\"};","import {SubmitHandler, useForm} from 'react-hook-form';\r\nimport {aboutMeValidator, descriptionValidator, fullNameValidator} from '../../../../utils/profileFormValidators/profile-valid';\r\nimport s from './ProfileDataForm.module.css'\r\nimport c from './../../../../common/styles/Common.module.css';\r\nimport {ContactsType} from '../../Profile';\r\nimport {useAppSelector} from '../../../../bll/hooks';\r\n\r\nexport type ProfileDataType = {\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string,\r\n    fullName: string,\r\n    aboutMe: string,\r\n    contacts: ContactsType\r\n}\r\n\r\ntype ProfileDataFormPropsType = {\r\n    onSubmit: (data: ProfileDataType) => void\r\n    error: string | null\r\n}\r\n\r\nexport const ProfileDataForm = ({error, onSubmit}: ProfileDataFormPropsType) => {\r\n\r\n    const profile = useAppSelector(state => state.profilePage.profile!)\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: {errors},\r\n    } = useForm<ProfileDataType>({\r\n        defaultValues: {\r\n            lookingForAJob: profile.lookingForAJob,\r\n            lookingForAJobDescription: profile.lookingForAJobDescription || '',\r\n            fullName: profile.fullName,\r\n            aboutMe: profile.aboutMe || '',\r\n            contacts: {\r\n                facebook: profile.contacts.facebook || null,\r\n                website: profile.contacts.website || null,\r\n                vk: profile.contacts.vk || null,\r\n                twitter: profile.contacts.twitter || null,\r\n                instagram: profile.contacts.instagram || null,\r\n                youtube: profile.contacts.youtube || null,\r\n                github: profile.contacts.github || null,\r\n                mainLink: profile.contacts.mainLink || null,\r\n            }\r\n        }\r\n    })\r\n\r\n    const onFormSubmit: SubmitHandler<ProfileDataType> = (data: ProfileDataType) => {\r\n        onSubmit(data)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className={s.form} onSubmit={handleSubmit(onFormSubmit)}>\r\n\r\n                <div>\r\n                    <span>Looking for a job?</span>\r\n                    <input className={s.input} type=\"checkbox\" {...register('lookingForAJob')}/>\r\n                </div>\r\n\r\n                <div className={s.blocksContainer}>\r\n                    <div className={s.item}>\r\n                        <span>Short skills review:</span>\r\n                        <textarea rows={5} className={s.textarea}\r\n                            {...register('lookingForAJobDescription', descriptionValidator)}/>\r\n                        <div className={c.textBlock}>{errors.lookingForAJobDescription?.message}</div>\r\n                    </div>\r\n\r\n                    <div className={s.item}>\r\n                        <span>Your full name:</span>\r\n                        <textarea rows={5} className={s.textarea}\r\n                            {...register('fullName', fullNameValidator)}/>\r\n                        <div className={c.textBlock}>{errors.fullName?.message}</div>\r\n                    </div>\r\n\r\n                    <div className={s.item}>\r\n                        <span>About me:</span>\r\n                        <textarea rows={5} className={s.textarea}\r\n                            {...register('aboutMe', aboutMeValidator)}/>\r\n                        <div className={c.textBlock}>{errors.aboutMe?.message}</div>\r\n                    </div>\r\n\r\n                    <div className={s.blocksContainer}>\r\n                        <div className={s.item}>\r\n                            <span>Facebook:</span>\r\n                            <input className={s.textarea}\r\n                                {...register('contacts.facebook')}/>\r\n                            <div className={c.textBlock}></div>\r\n                        </div>\r\n\r\n                        <div className={s.item}>\r\n                            <span>GitHub:</span>\r\n                            <input className={s.textarea}\r\n                                {...register('contacts.github')}/>\r\n                            <div className={c.textBlock}></div>\r\n                        </div>\r\n\r\n                        <div className={s.item}>\r\n                            <span>Twitter:</span>\r\n                            <input className={s.textarea}\r\n                                {...register('contacts.twitter')}/>\r\n                            <div className={c.textBlock}></div>\r\n                        </div>\r\n\r\n\r\n                        <div className={s.item}>\r\n                            <span>VK:</span>\r\n                            <input className={s.textarea}\r\n                                {...register('contacts.vk')}/>\r\n                            <div className={c.textBlock}></div>\r\n                        </div>\r\n\r\n\r\n                        <div className={s.item}>\r\n                            <span>Instagram:</span>\r\n                            <input className={s.textarea}\r\n                                {...register('contacts.instagram')}/>\r\n                            <div className={c.textBlock}></div>\r\n                        </div>\r\n\r\n\r\n                        <div className={s.item}>\r\n                            <span>Main link:</span>\r\n                            <input className={s.textarea}\r\n                                {...register('contacts.mainLink')}/>\r\n                            <div className={c.textBlock}></div>\r\n                        </div>\r\n\r\n\r\n                        <div className={s.item}>\r\n                            <span>Website:</span>\r\n                            <input className={s.textarea}\r\n                                {...register('contacts.website')}/>\r\n                            <div className={c.textBlock}></div>\r\n                        </div>\r\n\r\n\r\n                        <div className={s.item}>\r\n                            <span>Youtube:</span>\r\n                            <input className={s.textarea}\r\n                                {...register('contacts.youtube')}/>\r\n                            <div className={c.textBlock}></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className={c.textBlock}>{error}</div>\r\n                <input className={s.submit} value={'Submit data'} type={'submit'}/>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\nimport {ProfileStatus} from './ProfileStatus';\r\nimport {submitProfile, uploadPhoto} from '../../../bll/profile-reducer';\r\nimport userPhoto from './../../../common/Img/default-user.jpg';\r\nimport {ProfileData} from './ProfileData/ProfileData';\r\nimport {ProfileDataForm, ProfileDataType} from './ProfileDataForm/ProfileDataForm';\r\nimport {useAppDispatch, useAppSelector} from '../../../bll/hooks';\r\n\r\ntype PropsType = {\r\n    isOwner: boolean\r\n}\r\n\r\nexport const ProfileInfo = ({isOwner}: PropsType) => {\r\n\r\n    const {profile, status} = useAppSelector(state => state.profilePage)\r\n    const {error} = useAppSelector(state => state.app)\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const dispatch = useAppDispatch()\r\n    const [hover, setHover] = useState<boolean>(false)\r\n\r\n    const onEditMode = () => setEditMode(true)\r\n    const onHover = () => setHover(true)\r\n    const offHover = () => setHover(false)\r\n\r\n    const onMainPhotoSelect = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files!.length) dispatch(uploadPhoto(e.target.files![0]))\r\n    }\r\n\r\n    const onSubmit = (data: ProfileDataType) => {\r\n        setEditMode(false)\r\n        dispatch(submitProfile(data))\r\n    }\r\n\r\n    const activeClassName = `${s.status} ${isOwner && hover ? s.active : ''}`\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile?.photos.large || userPhoto} alt={'profile owner'}/>\r\n                {isOwner && <input onChange={onMainPhotoSelect} type={'file'}/>}\r\n            </div>\r\n            <div>\r\n                <div onMouseEnter={onHover} onMouseLeave={offHover} className={activeClassName}>\r\n                    {isOwner\r\n                        ? <ProfileStatus/>\r\n                        : (status ? status : 'no status')}\r\n                </div>\r\n            </div>\r\n            <>\r\n                {editMode ? <ProfileDataForm error={error} onSubmit={onSubmit}/>\r\n                    : <ProfileData onEditMode={onEditMode} isOwner={isOwner}/>}\r\n            </>\r\n        </div>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__exqaL\",\"posts\":\"MyPosts_posts__lgtl-\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__D8v2y\"};","import React from \"react\";\r\nimport s from './Post.module.css'\r\nimport {PostType} from '../../../../bll/profile-reducer';\r\n\r\nconst Post = ({post, likesCount}: PostType) => {\r\n    return (<div className={s.item}>\r\n        <img\r\n            src={'https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_960_720.png'}\r\n            alt={'avatar'}/>\r\n        {post}\r\n        <div>\r\n            <div>\r\n                likes:{likesCount}\r\n                <button>like</button>\r\n                <button>x</button>\r\n            </div>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default Post;","import {useForm} from 'react-hook-form';\r\nimport {postFieldValidator} from '../../../../utils/validators/validators';\r\nimport s from '../../../../common/styles/Common.module.css';\r\n\r\ntype PostFormType = {\r\n    text: string,\r\n}\r\n\r\ntype PostFormPropsType = {\r\n    onSubmit: (text: string) => void\r\n}\r\n\r\nexport const AddPostForm = (props: PostFormPropsType) => {\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: {errors},\r\n        reset,\r\n    } = useForm<PostFormType>({\r\n        defaultValues: {\r\n            text: ''\r\n        }\r\n    })\r\n\r\n    const errorClassName = errors.text ? `${s.textArea} ${s.error}` : s.textArea\r\n\r\n    const onSubmit = (data: PostFormType) => {\r\n        props.onSubmit(data.text)\r\n        reset()\r\n    }\r\n\r\n    return <form onSubmit={handleSubmit(onSubmit)}>\r\n            <textarea className={errorClassName} placeholder={'Write something...'}\r\n                {...register('text', postFieldValidator)}/>\r\n        <div className={s.textBlock}>\r\n            {errors.text && errors.text.message}\r\n        </div>\r\n        <input value={'Publish post'} type='submit'/>\r\n    </form>\r\n}","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\nimport {AddPostForm} from './AddPostForm/AddPostForm';\r\nimport {useAppDispatch, useAppSelector} from '../../../bll/hooks';\r\nimport {addPost} from '../../../bll/profile-reducer';\r\n\r\nexport const MyPosts = () => {\r\n    const dispatch = useAppDispatch()\r\n    const posts = useAppSelector(state => state.profilePage.posts)\r\n    let postsElements = posts.map(({post, id, likesCount}) =>\r\n        (<Post key={id} id={id} post={post} likesCount={likesCount}/>))\r\n\r\n    const onSubmit = (text: string) => dispatch(addPost(text))\r\n\r\n    return (<div className={s.postsBlock}>\r\n        <h3>My posts</h3>\r\n        <div>\r\n            <div>\r\n                <AddPostForm onSubmit={onSubmit}/>\r\n            </div>\r\n        </div>\r\n        <div className={s.posts}>\r\n            {postsElements}\r\n        </div>\r\n    </div>)\r\n}","import React, {useEffect} from \"react\";\r\nimport {getUserStatus, loadUserProfile} from '../../bll/profile-reducer';\r\nimport {useParams} from 'react-router-dom';\r\nimport {useAppDispatch, useAppSelector} from '../../bll/hooks';\r\nimport s from './Profile.module.css';\r\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo';\r\nimport {MyPosts} from './MyPosts/MyPosts';\r\nimport {WithAuthRedirect} from '../../HOC/WithAuthRedirect';\r\nimport {Preloader} from '../Preloader/Preloader';\r\n\r\nexport type ContactsType = {\r\n    facebook: string | null,\r\n    website: string | null,\r\n    vk: string | null,\r\n    twitter: string | null,\r\n    instagram: string | null,\r\n    youtube: string | null,\r\n    github: string | null,\r\n    mainLink: string | null\r\n}\r\n\r\ntype PhotosType = {\r\n    small: string | null,\r\n    large: string | null\r\n}\r\nexport type ProfileType = {\r\n    aboutMe: string | null,\r\n    contacts: ContactsType,\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string | null,\r\n    fullName: string,\r\n    userId: number,\r\n    photos: PhotosType,\r\n}\r\n\r\nexport default WithAuthRedirect(() => {\r\n\r\n    const {userId} = useParams()\r\n    const dispatch = useAppDispatch()\r\n    const {id} = useAppSelector(state => state.auth)\r\n    const profile = useAppSelector(state => state.profilePage.profile)\r\n\r\n    useEffect(() => {\r\n        refreshProfile()\r\n    }, [userId])\r\n\r\n    const refreshProfile = () => {\r\n        if (userId) {\r\n            let id = +userId\r\n            dispatch(loadUserProfile(id))\r\n            dispatch(getUserStatus(id))\r\n        }\r\n    }\r\n\r\n    const isOwner = userId ? +userId === id : false\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.mainCont}>\r\n            <ProfileInfo isOwner={isOwner}/>\r\n            <MyPosts/>\r\n        </div>\r\n    )\r\n})\r\n","import {FC} from 'react';\r\nimport {Navigate} from 'react-router-dom';\r\nimport {useAppSelector} from '../bll/hooks';\r\n\r\nexport function WithAuthRedirect<T>(Component: FC<T>) {\r\n    function RedirectComponent(props: T) {\r\n        const {isAuth} = useAppSelector(state => state.auth)\r\n        if (!isAuth) return <Navigate to={'/login'}/>\r\n        return <Component {...props}/>\r\n    }\r\n    return RedirectComponent;\r\n}"],"names":["ProfileStatus","profileStatus","useAppSelector","state","profilePage","status","dispatch","useAppDispatch","useState","editMode","setEditMode","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","updateUserStatus","onClick","Contacts","props","keys","Object","values","isRendering","some","contacts","map","key","i","className","s","target","rel","href","ProfileData","isOwner","onEditMode","profile","lookingForAJob","lookingForAJobDescription","fullName","aboutMe","fullNameValidator","required","descriptionValidator","aboutMeValidator","ProfileDataForm","error","onSubmit","useForm","defaultValues","facebook","website","vk","twitter","instagram","youtube","github","mainLink","register","handleSubmit","errors","formState","data","type","rows","c","message","ProfileInfo","app","hover","setHover","activeClassName","src","photos","large","userPhoto","alt","files","length","uploadPhoto","onMouseEnter","onMouseLeave","submitProfile","post","likesCount","AddPostForm","text","reset","errorClassName","placeholder","postFieldValidator","MyPosts","postsElements","posts","id","addPost","WithAuthRedirect","userId","useParams","auth","refreshProfile","loadUserProfile","getUserStatus","Preloader","Component","isAuth","to"],"sourceRoot":""}