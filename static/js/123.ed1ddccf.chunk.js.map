{"version":3,"file":"static/js/123.ed1ddccf.chunk.js","mappings":"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","sources":["webpack://social-network/./src/Components/Users/Users.module.scss?5c93","Components/Users/Pagination.tsx","bll/selectors.ts","webpack://social-network/./src/Components/Users/UsersList/UsersList.module.scss?dd2b","Components/Users/UserItem/UserItem.tsx","Components/Users/UsersList/UsersList.tsx","webpack://social-network/./src/Components/Users/SortSelect/SortSelect.module.scss?d899","webpack://social-network/./src/Components/Users/SortSelect/Option/Option.module.scss?931e","Components/Users/SortSelect/Option/Option.tsx","Components/Users/SortSelect/SortSelect.tsx","Components/Users/Users.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"Users_userPhoto__J8wQB\",\"selected\":\"Users_selected__2Fjce\",\"main\":\"Users_main__uxlUU\",\"filterBlock\":\"Users_filterBlock__bwhVH\",\"disable\":\"Users_disable__Tg7Ue\"};","import s from './Users.module.scss';\r\nimport React from 'react';\r\nimport {useAppSelector} from '../../bll/hooks';\r\n\r\ntype PropsType = {\r\n    onPageChanged: (i: number, pageSize: number) => void,\r\n    currentPage: number,\r\n    totalUsersCount: number,\r\n    pageSize: number,\r\n}\r\n\r\n\r\nexport const Pagination = ({currentPage, onPageChanged, totalUsersCount, pageSize}: PropsType) => {\r\n\r\n    const {status} = useAppSelector(state => state.app)\r\n    const pages = []\r\n    const prevTwoPages = () => onPageChanged(currentPage - 2, pageSize)\r\n    const nextTwoPages = () => onPageChanged(currentPage + 2, pageSize)\r\n    const onFirstPageChange = () => onPageChanged(1, pageSize)\r\n    const onLastPageChange = () => onPageChanged(pagesCount, pageSize)\r\n\r\n    const pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n\r\n    const divClassName = status === 'loading' ? s.disable : ''\r\n\r\n    if (currentPage <= 4) {\r\n        for (let i = 1; i <= 5; i++) {\r\n            pages.push(i)\r\n        }\r\n        return <div className={divClassName}>\r\n            {pages.map(i => <button key={i} onClick={() => onPageChanged(i, pageSize)}\r\n                className={currentPage === i ? s.selected : ''}>{i}</button>)\r\n            }\r\n            <button onClick={nextTwoPages}>»</button>\r\n            <button onClick={onLastPageChange}>...</button>\r\n        </div>\r\n    } else if (currentPage >= 4 && currentPage <= pagesCount - 4) {\r\n        for (let i = currentPage - 1; i <= currentPage + 1; i++) {\r\n            pages.push(i)\r\n        }\r\n        return <div className={divClassName}>\r\n            <button onClick={onFirstPageChange}>{1}</button>\r\n            <button onClick={prevTwoPages}>«</button>\r\n            {pages.map(i => <button key={i} onClick={() => onPageChanged(i, pageSize)}\r\n                className={currentPage === i ? s.selected : ''}>{i}</button>)\r\n            }\r\n            <button onClick={nextTwoPages}>»</button>\r\n            <button onClick={onLastPageChange}>...</button>\r\n        </div>\r\n    } else {\r\n        for (let i = pagesCount - 4; i <= pagesCount; i++) {\r\n            pages.push(i)\r\n        }\r\n        return <div className={divClassName}>\r\n            <button onClick={onFirstPageChange}>{1}</button>\r\n            <button onClick={prevTwoPages}>«</button>\r\n            {pages.map(i => <button key={i} onClick={() => onPageChanged(i, pageSize)}\r\n                className={currentPage === i ? s.selected : ''}>{i}</button>)\r\n            }\r\n        </div>\r\n    }\r\n}","import {RootStateType} from './store';\r\n\r\nexport const usersData = (state: RootStateType) => state.usersPage\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"UsersList_content__-KxwY\"};","import {NavLink} from 'react-router-dom';\r\nimport userPhoto from '../../../common/Img/default-user.jpg';\r\nimport s from '../Users.module.scss';\r\nimport React from 'react';\r\nimport {toggleFollow, UserType} from '../../../bll/users-reducer';\r\nimport {useAppDispatch, useAppSelector} from '../../../bll/hooks';\r\n\r\n\r\ntype UserPropsType = {\r\n    u: UserType\r\n}\r\n\r\nexport const UserItem = ({u}: UserPropsType) => {\r\n\r\n    const dispatch = useAppDispatch()\r\n    const {isFollowing} = useAppSelector(state => state.usersPage)\r\n    const toggleFollowHandler = () => dispatch(toggleFollow({userID: u.id, isFollowed: u.followed}))\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <NavLink to={'/profile/' + u.id}>\r\n                    <img src={u.photos.small ? u.photos.small : userPhoto} className={s.userPhoto} alt={'user face'}/>\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                <button disabled={isFollowing.some(id => id === u.id)}\r\n                    onClick={toggleFollowHandler}>{!u.followed ? 'Follow' : 'Unfollow'}</button>\r\n            </div>\r\n            <div>\r\n                <div>{u.name}</div>\r\n                <div>{u.status}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import s from './UsersList.module.scss';\r\nimport {InnerPreloader} from '../../InnerPreloader/InnerPreloader';\r\nimport {UserItem} from '../UserItem/UserItem';\r\nimport React, {memo} from 'react';\r\nimport {useAppSelector} from '../../../bll/hooks';\r\nimport {usersData} from '../../../bll/selectors';\r\n\r\nexport const UsersList = memo(() => {\r\n\r\n    const {users, isFetching} = useAppSelector(usersData)\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            {isFetching\r\n                ? <InnerPreloader/>\r\n                : users.map(u => <UserItem key={u.id} u={u}/>)}\r\n        </div>\r\n    )\r\n})","// extracted by mini-css-extract-plugin\nexport default {\"select\":\"SortSelect_select__ywH9J\",\"active\":\"SortSelect_active__IJEJZ\",\"options\":\"SortSelect_options__rArjz\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Option_item__KOgtH\"};","import s from './Option.module.scss';\r\nimport React from 'react';\r\nimport {useAppDispatch, useAppSelector} from '../../../../bll/hooks';\r\nimport {fetchUsers} from '../../../../bll/users-reducer';\r\n\r\ntype OptionPropsType = {\r\n    value: number;\r\n    setCount: (count: number) => void\r\n}\r\n\r\nexport const Option = ({value, setCount}: OptionPropsType) => {\r\n\r\n    const dispatch = useAppDispatch()\r\n\r\n    const fetchData = useAppSelector(state => state.usersPage.fetchData)\r\n    // const pageSize = useAppSelector(state => state.usersPage.pageSize)\r\n\r\n    // const setCountButtonOnClick = () => setCount(value)\r\n\r\n    const fetchDataButtonOnClick = () => {\r\n        setCount(value)\r\n        dispatch(fetchUsers({currentPage: fetchData.page, pageSize: value}))\r\n    }\r\n\r\n    return <div onClick={fetchDataButtonOnClick} className={s.item}>{value}</div>\r\n}","import React, {memo, useEffect, useState} from 'react';\r\nimport s from './SortSelect.module.scss';\r\nimport {useAppDispatch, useAppSelector} from '../../../bll/hooks';\r\nimport {Option} from './Option/Option';\r\nimport {fetchUsers} from '../../../bll/users-reducer';\r\n\r\nconst pageSizeFilterValues: number[] = [3, 5, 7, 10, 20]\r\n\r\nexport const SortSelect = memo(() => {\r\n\r\n    // const dispatch = useAppDispatch()\r\n    const pageSize = useAppSelector(state => state.usersPage.pageSize)\r\n    // const fetchData = useAppSelector(state => state.usersPage.fetchData)\r\n    const [count, setCount] = useState<number>(pageSize)\r\n    const [isShow, setIsShow] = useState<boolean>(false)\r\n    const onShowSelectOnClick = () => setIsShow(true)\r\n    const onHideSelectOnClick = () => {\r\n        if (isShow) {\r\n            setIsShow(false)\r\n        }\r\n    }\r\n\r\n    const selectClassName = `${s.select} ${isShow && s.active}`\r\n\r\n    useEffect(() => {\r\n        isShow && window.addEventListener('click', onHideSelectOnClick)\r\n        return () => {\r\n            window.removeEventListener('click', onHideSelectOnClick)\r\n        }\r\n    }, [isShow])\r\n\r\n    // const fetchDataButtonOnClick = () => {\r\n    //     setIsShow(false)\r\n    //     dispatch(fetchUsers({currentPage: fetchData.page, pageSize: count}))\r\n    // }\r\n\r\n    return (\r\n        <div className={selectClassName} onClick={onShowSelectOnClick}>\r\n            {count}\r\n            {isShow && <div className={s.options}>\r\n                {pageSizeFilterValues.map(el => <Option key={el} value={el} setCount={setCount}/>)}\r\n            </div>}\r\n        </div>\r\n    )\r\n})","import React, {memo, useEffect} from 'react';\r\nimport {clearUsersData, fetchUsers, setCurrentPage} from '../../bll/users-reducer';\r\nimport {Pagination} from './Pagination';\r\nimport {useAppDispatch, useAppSelector} from '../../bll/hooks';\r\nimport {usersData} from '../../bll/selectors';\r\nimport {WithAuthRedirect} from '../../HOC/WithAuthRedirect';\r\nimport s from './Users.module.scss';\r\nimport {UsersList} from './UsersList/UsersList';\r\nimport {SortSelect} from './SortSelect/SortSelect';\r\n\r\nexport default WithAuthRedirect(memo(() => {\r\n    const {totalUsersCount, pageSize, currentPage} = useAppSelector(usersData)\r\n\r\n    const dispatch = useAppDispatch()\r\n    useEffect(() => {\r\n        dispatch(fetchUsers({currentPage, pageSize}))\r\n        return () => {\r\n            dispatch(clearUsersData())\r\n        }\r\n    }, [])\r\n\r\n    const onPageChanged = (currentPage: number, pageSize: number) => {\r\n        dispatch(setCurrentPage(currentPage));\r\n        dispatch(fetchUsers({currentPage, pageSize}));\r\n    }\r\n\r\n    return <div className={s.main}>\r\n        <div className={s.filterBlock}>\r\n            {!!totalUsersCount && <Pagination\r\n                pageSize={pageSize}\r\n                currentPage={currentPage}\r\n                totalUsersCount={totalUsersCount}\r\n                onPageChanged={onPageChanged}\r\n            />}\r\n            <div>\r\n                <input type=\"text\"/>\r\n            </div>\r\n            <SortSelect/>\r\n        </div>\r\n        <UsersList/>\r\n    </div>\r\n}))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["Pagination","currentPage","onPageChanged","totalUsersCount","pageSize","status","useAppSelector","state","app","pages","prevTwoPages","nextTwoPages","onFirstPageChange","onLastPageChange","pagesCount","Math","ceil","divClassName","s","i","push","className","map","onClick","usersData","usersPage","UserItem","u","dispatch","useAppDispatch","isFollowing","to","id","src","photos","small","userPhoto","alt","disabled","some","toggleFollow","userID","isFollowed","followed","name","UsersList","memo","users","isFetching","InnerPreloader","Option","value","setCount","fetchData","fetchUsers","page","pageSizeFilterValues","SortSelect","useState","count","isShow","setIsShow","onHideSelectOnClick","selectClassName","useEffect","window","addEventListener","removeEventListener","el","WithAuthRedirect","clearUsersData","setCurrentPage","type"],"sourceRoot":""}